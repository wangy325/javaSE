
package com.wangy325.abstractor;

/**
 * @author wangy325
 *
 * @date Dec 13, 2017  9:16:19 AM
 *
 * @decription   抽象类和抽象方法
 * 					1.抽象方法必须存在于抽象类中, 但是抽象类可以不含抽象方法;
 * 					2.抽象类不能被实例化, 即不能new关键字创建对象;
 * 					3.抽象类和抽象方法不能与 final/private/static 关键字共用, 会引起冲突
 * 						final 不能被继承, 而抽象类不被继承还有什么用?
 * 						private 修饰的方法被抽象类私有, 子类没有权限覆写,抽象方法就没意义了
 * 						static 修饰的静态抽象方法, 没有意义
 * 					4.子类继承抽象类父类的时候, 父类的抽象方法可以实现, 也可以不实现,
 * 					  如果没有实现, 则子类也要定义为抽象类 意思就是, 如果先正经写个方法,
 * 					  抽象类的所有抽象方法必须要覆写!!不然编译器会报错
 * 					5.[抽象类] 和 [抽象方法] 可以更好的发挥多态的优势, 使得程序更加灵活 
 * 						详细见 Shape 抽象类
 */
// 利用 [abstract] 关键字声明抽象类和抽象方法
public abstract class Note {
//	抽象方法没有方法体, 即没有包含代码块的花括号
	abstract void take(String str);
}
